server.port: 7001
server.error.include-message: always

spring.application.name: product

spring.data.mongodb:
  host: localhost
  port: 27017
  database: product-db

management.endpoint.health.group.readiness.include: readinessState, mongo

spring.cloud.function.definition: messageProcessor


spring.cloud.stream:
  default.contentType: application/json
#  bindings.messageProcessor-in-0:
#    destination: products
#    group: productsGroup

#spring.cloud.stream.bindings.messageProcessor-in-0.consumer:
#  maxAttempts: 3
#  backOffInitialInterval: 500
#  backOffMaxInterval: 1000
#  backOffMultiplier: 2.0
#
#spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer:
#  autoBindDlq: true
#  republishToDlq: true
#
#spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer:
#  enableDlq: true

logging:
  level:
    root: INFO
    com.example: INFO
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

---
spring.config.activate.on-profile: docker

server.port: 80

spring.data.mongodb.host: mongodb


---
spring.config.activate.on-profile: prod

spring.data.mongodb.host: 172.17.0.1

logging:
  level:
    root: WARN
    com.example: WARN
    org.springframework.data.mongodb.core.MongoTemplate: WARN

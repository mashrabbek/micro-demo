spring.application.name: product-composite

logging:
  level:
    root: INFO
    com.com.example: DEBUG
    org.springdoc: DEBUG
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE
    org.springframework.security: DEBUG
    
springdoc:
  api-docs:
    path: /openapi/v3/api-docs
  packagesToScan: com.example.microservices.composite.product
  pathsToMatch: /**
  cache.disabled: true

  swagger-ui:
    path: /openapi/swagger-ui.html
    oauth2-redirect-url: /swagger-ui/oauth2-redirect.html
    oauth:
      clientId: writer
      clientSecret: secret-writer
      useBasicAuthenticationWithAccessCodeGrant: true
    oAuthFlow:
      authorizationUrl: https://localhost:8443/oauth2/authorize
      tokenUrl: https://localhost:8443/oauth2/token

server.forward-headers-strategy: framework


api:
  common:
    version: 1.0.0
    title: Product Composite Service API
    description: API documentation for Product Composite Service
    termsOfService: MY TERMS OF SERVICE
    license: MIT LICENSE
    licenseUrl: MY LICENSE URL
    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: Mashrabbek Akbarov
      url: URL TO CONTACT
      email: mashrabbek@example.com
  responseCodes:
    ok:
      description: OK
    badRequest:
      description: Bad Request, invalid format of the request. See response message for more information
    notFound:
      description: Not found, the specified id does not exist
    unprocessableEntity:
      description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  product-composite:
    get-composite-product:
      description: Returns a composite view of the specified product id
      notes: |
        # Normal response
        If the requested product id is found the method will return information regarding:
        1. Base product information
        1. Reviews
        1. Recommendations
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)

        ## Product id 113
        200 - Ok, but no recommendations will be returned

        ## Product id 213
        200 - Ok, but no reviews will be returned

        ## Non numerical product id
        400 - A **Bad Request** error will be returned

        ## Product id 13
        404 - A **Not Found** error will be returned

        ## Negative product ids
        422 - An **Unprocessable Entity** error will be returned

server:
  port: 8000
  error:
    include-message: always

app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost
  auth-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
    registerWithEureka: true
    fetchRegistry: true
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://${app.auth-server}:9999
spring:
  main:
    allow-bean-definition-overriding: true


management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
---
spring.config.activate.on-profile: docker

server.port: 8080

app:
  eureka-server: eureka
  auth-server: auth-server
